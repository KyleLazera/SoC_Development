#include "spi_core.h"

/****** Helper Functions *********/

static void spi_set_ss(spi_handle_t* self, uint32_t bit_val, uint32_t bit_pos)
{
	//Set a bit in the slave select register to desired value
	bit_write(self->ss_reg, bit_pos, bit_val);
	//Write value to the register
	io_write(self->base_reg, SS_REG, self->ss_reg);
}

static uint32_t spi_ready()
{
	uint32_t rd_reg;
	//Read from the rd register

}

/****** Methods ********/

void spi_init(spi_handle_t* self, uint32_t core_addr)
{
	//Init the SPI Core addres
	self->base_reg = core_addr;
	//Set the freq, mode & slave select pin
}

void spi_set_freq(spi_handle_t* self, uint32_t freq_val)
{
	uint16_t dvsr;
	//Calculate the dvsr value based off the equation
	dvsr = (uint16_t)(((SYS_CLK_FREQ * 1000000)/(2 * freq_val)) - 1);
	self->ctrl_reg |= dvsr;
	//Write value into the control register
	io_write(self->base_reg, SPI_CTRL_REG, self->ctrl_reg);
}

void spi_set_mode(spi_handle_t* self, uint32_t mode)
{
	self->ctrl_reg = (ctrl_reg | mode);
	//Write value into ctrl reg
	io_write(self->base_reg, SPI_CTRL_REG, self->ctrl_reg);
}

void spi_assert_ss(spi_handle_t* self, uint32_t bit_pos)
{
	spi_set_ss(self, 0, bit_pos);
}

void spi_deassert_ss(spi_handle_t* self, uint32_t bit_pos)
{
	spi_set_ss(self, 1, bit_pos);
}

