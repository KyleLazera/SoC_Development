#ifndef _I2C_CORE
#define _I2C_CORE

#include "io_rw.h"
#include "io_map.h"

enum
{
	DVSR_REG = 0,
	WR_REG = 1,
	RD_REG = 0
}i2c_reg;

enum
{
	I2C_START = 0x00 << 8,
	I2C_WR = 0x01 << 8,
	I2C_RD = 0x02 << 8,
	I2C_STOP = 0x03 << 8,
	I2C_RESTART = 0x04 << 8
}i2c_cmd;

typedef struct
{
	uint32_t base_addr;
}i2c_handle_t;

/**** Methods *****/

/**
 * @brief Constructor to initialize i2c address
 * @param core_addr The address for the I2C Core
 */
void i2c_init(i2c_handle_t* self, uint32_t core_addr);

/**
 * @brief Sets the i2c clock frequency by calculating dvsr value
 * @note equation used: dvsr = sysclk/(4 * i2cclk)
 */
void i2c_set_freq(i2c_handle_t* self, int i2c_freq);

#endif //_I2C_CORE
