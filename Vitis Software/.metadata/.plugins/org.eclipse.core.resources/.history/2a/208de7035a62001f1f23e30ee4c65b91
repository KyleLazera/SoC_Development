#ifndef _SPI_CORE_H
#define _SPI_CORE_H

#include "io_rw.h"
#include "io_map.h"

typedef enum{
	RD_DATA_REG = 0,
	SS_REG = 1,
	WR_DATA_REG = 2,
	SPI_CTRL_REG = 3
}SPI_REG;

typedef struct{
	uint32_t base_reg;
	uint32_t ctrl_reg;
}spi_handle_t;

/**
 * @brief Constructor to initialize the SPI Core
 * @note SPI set to 400kHz freq by default with clock polarity = 0 & clokc phase = 0
 * @param core_addr - This is the address of the spi core itself
 */
void spi_init(spi_handle_t* self, uint32_t core_addr);

/**
 * @brief Writes into the SPI control register to set the frequency to the desired value
 * @note The equation to determine the divisor (value written into the register) is:
 * 			dvsr = sys_clk/(2 * desired_freq) - 1
 * @param freq_val - This is the desired value to runt he SPI clock at
 */
void spi_set_freq(spi_handle_t* self, uint32_t freq_val);

void spi_set_mode(spi_handle_t* self, uint32_t mode);

#endif //_SPI_CORE_H
